{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  let controlLeft = document.querySelector('.control-left')\n  let controlRight = document.querySelector('.control-right')\n\n  let textWidth = document.querySelector('.text-slider').offsetWidth + 2\n  let photoWidth = document.querySelector('.photos-slider').offsetWidth + 2\n\n  let textItems = [].slice.call(document.querySelectorAll('.text-slider-item'))\n  let photoItems = [].slice.call(document.querySelectorAll('.photos-slider-item'))\n\n  let textSliderContent = document.querySelector('.text-slider-list')\n  let photosSliderContent = document.querySelector('.photos-slider-list')\n\n  let textSliderWidth = -((5 * textWidth) - textWidth)\n  let photosSliderWidth = -((5 * photoWidth) - photoWidth)\n\n  let textPosition = textSliderContent.style.marginLeft\n  // начальная позиция текстового слайдера\n  textPosition = '0px'\n\n  let photoPosition = photosSliderContent.style.marginLeft\n  // начальная позиция фото слайдера\n  photoPosition = '0px'\n\n  //номер активного слайда\n  let activeSlide = 0\n\n  // добавляем каждому слайду такую же ширину как у контейнера\n  addSize()\n\n  // при ресайзе окна, пересчитываем базовую ширину каждого слайда\n  window.addEventListener('resize', () => {\n    textWidth = document.querySelector('.text-slider').offsetWidth\n    photoWidth = document.querySelector('.photos-slider').offsetWidth\n    addSize()\n  })\n  window.addEventListener('resize', () => {\n    let x = activeSlide\n    reCalcWidth(x)\n  })\n\n  let disabled = false\n\n  controlRight.addEventListener('click', () => {\n    if(!disabled) {\n      disabled = true\n      setTimeout(() => {\n        if (activeSlide < 4) {\n          activeSlide++\n          slide(activeSlide, 'right')\n        }\n        disabled = false\n      }, 300)\n    }\n  })\n\n  controlLeft.addEventListener('click', () => {\n    if(!disabled) {\n      disabled = true\n      setTimeout(() => {\n        if (activeSlide > 0) {\n          activeSlide--\n          slide(activeSlide, 'left')\n        }\n        disabled = false\n      }, 300)\n    }\n  })\n\n  function addSize() {\n    // проходимся по всем элементам и задаем им ширину контейнера\n    textItems.forEach(element => {\n      element.style.width = textWidth + 'px'\n    })\n\n    // проходимся по всем элементам и задаем им ширину контейнера\n    photoItems.forEach(element => {\n      element.style.width = photoWidth + 'px'\n    })\n  }\n\n  function slide(activeSlide, control) {\n    let start = Date.now()\n    let timer = setInterval(() => {\n      let timePassed = Date.now() - start\n      if (timePassed >= 300) {\n        // после завершения анимации, убираем погрешность в размере путем пересчета позиции слайдера\n        // умножая ширину контейнера на номер активного слайда\n        reCalcWidth(activeSlide)\n        clearInterval(timer)\n        return\n      }\n      //с каждей итерацией функции перерисовываем позицию на которой должен находиться слайдер\n      draw(timePassed, textPosition, photoPosition, control)\n    }, 1)\n  }\n\n  function draw(timePassed, textPosition, photoPosition, control) {\n    // на сколько пикселей в секунду сдвигается 1 слайдер\n    let pxPerSecText = 300 / textWidth\n    // на сколько пикселей в секунду сдвигается 2 слайдер\n    let pxPerSecPhot = 300 / photoWidth\n    if (control === 'left') {\n      textPosition = parseInt(textPosition) + timePassed / pxPerSecText + 'px'\n      photoPosition = parseInt(photoPosition) + timePassed / pxPerSecPhot + 'px'\n    } else {\n      textPosition = parseInt(textPosition) - timePassed / pxPerSecText + 'px'\n      photoPosition = parseInt(photoPosition) - timePassed / pxPerSecPhot + 'px'\n    }\n    textSliderContent.style.marginLeft = textPosition\n    photosSliderContent.style.marginLeft = photoPosition\n  }\n\n  function reCalcWidth(activeSlide) {\n    //первый слайдер\n    textPosition = -(activeSlide * textWidth) + 'px'\n    textSliderContent.style.marginLeft = textPosition\n\n    //ворой слайдер\n    photoPosition = -(activeSlide * photoWidth) + 'px'\n    photosSliderContent.style.marginLeft = photoPosition\n  }\n})\n"],"sourceRoot":"/source/"}